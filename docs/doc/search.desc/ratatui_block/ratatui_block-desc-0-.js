searchState.loadedDescShard("ratatui_block", 0, "Block borders.\nSymbol descriptor.\nSymbol set trait\nBorder along bottom side.\nEnd corner with an extension perpendicular to the line.\nCrossing at the end. The first value is the border …\nEnd corner that goes on in the direction of the line.\nRegular end corner.\nBorder along the left side.\nBorder along the right side.\nNames for the sides of an area.\nSide with a crossing. The first value is the border …\nSide with a connection point inwards.\nSide with a connection point outwards.\nRegular side, but overlapping with some other border.\nRegular side.\nStart corner with an extension perpendicular to the line.\nCrossing at the start. The first value is the border …\nStart corner that goes on in the direction of the line.\nRegular start corner.\nBorder along the top side.\nEquivalent BorderType.\nGet the symbol for a 4-way crossing of lines.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds an inward connection to the given border.\nAdds an outward connection to the given border.\nGive the opposite side.\nChanges the BorderSymbol to add an overlapping area if …\nChanges the BorderSymbol to prolong the border along the …\nGet the actual symbol occurring along one side of the area.\nBorder for a Block.\nUse a BorderSymbolSet.\nBorder style for the border.\nSets the border type used.\nReturns the argument unchanged.\nNew block border for the given area.\nNew block border for a Block that is part of some bigger …\nReturn the symbol at the given position along the border.\nCalls <code>U::from(self)</code>.\nCreate a block border.\nAdd a connection point to an existing border.\nUse a BorderSymbolSet.\nBorder style for the border.\nSets the border type used.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFor which side of the area is this meant.\nWhat kind of symbol.\nRenders a block border and a connected grid inside.\nBorder style for the border.\nBorder style for the border.\nBorder style for the border.\nReturns the argument unchanged.\nCreate a grid line for every single cell gap between the …\nAdd a horizontal divider.\nUse a BorderSymbolSet.\nSets the border type used.\nAdd a horizontal side.\nBorder style for the border.\nCalls <code>U::from(self)</code>.\nAdd a vertical divider.\nUse a BorderSymbolSet.\nSets the border type used.\nAdd a vertical side.\nBorder style for the border.\nUses plain ascii characters to draw a border. Uses ‘+’…\nDouble border symbol set.\nTakes one of the old border::Set as base. Acts just like …\nPlain border symbol set.\nQuadrant inside border symbol set.\nQuadrant outside symbol set.\nRounded border symbol set.\nDraws a border using only ‘*’.\nFor manual borders.\nThick border symbol set.\nBorderType\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhen connecting to other borders, how does this one behave …\nCreate the BorderSymbolSet for the given BorderType.\nSymbol set")