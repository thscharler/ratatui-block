use crate::{Joint, JointMark, JointPos, JointSide};
use ratatui::buffer::Buffer;
use ratatui::layout::{Position, Rect};
use ratatui::widgets::BorderType;

pub fn render_joint(joint: &Joint, area: Rect, buf: &mut Buffer) {
    // normalize before finding the glyph
    let joint = joint.normalized(area);

    if let Some(pos) = joint.locate(area) {
        let sym = match joint.own_border {
            BorderType::Plain => plain_joint(joint),
            BorderType::Rounded => plain_joint(joint),
            BorderType::Double => double_joint(joint),
            BorderType::Thick => thick_joint(joint),
            BorderType::QuadrantInside => quad_inside_joint(joint),
            BorderType::QuadrantOutside => "X",
        };

        match joint.side {
            JointSide::Top => {
                if let Some(cell) = buf.cell_mut(Position::new(area.left() + pos, area.top())) {
                    cell.set_symbol(sym);
                }
            }
            JointSide::Right => {
                if let Some(cell) = buf.cell_mut(Position::new(
                    area.right().saturating_sub(1),
                    area.top() + pos,
                )) {
                    cell.set_symbol(sym);
                }
            }
            JointSide::Bottom => {
                if let Some(cell) = buf.cell_mut(Position::new(
                    area.left() + pos,
                    area.bottom().saturating_sub(1),
                )) {
                    cell.set_symbol(sym);
                }
            }
            JointSide::Left => {
                if let Some(cell) = buf.cell_mut(Position::new(area.left(), area.top() + pos)) {
                    cell.set_symbol(sym);
                }
            }
        }
    }
}

fn plain_joint(joint: Joint) -> &'static str {
    use BorderType::*;
    use JointMark::*;
    use JointPos::*;
    use JointSide::*;

    match (joint.mark, joint.side, joint.pos, joint.other_border) {
        (Out, Top, CrossStart(_), Plain) => "┼",
        (Out, Top, CrossStart(_), Rounded) => "┼",
        (Out, Top, CrossStart(_), Double) => "┼",
        (Out, Top, CrossStart(Thick), Thick) => "╃",
        (Out, Top, CrossStart(_), Thick) => "╀",
        (Out, Top, CrossStart(Thick), _) => "┽",
        (Out, Top, CrossStart(_), QuadrantInside) => "┼",
        (Out, Top, CrossStart(_), QuadrantOutside) => "┼",
        (Out, Top, ProlongStart, Plain) => "┬",
        (Out, Top, ProlongStart, Rounded) => "┬",
        (Out, Top, ProlongStart, Double) => "┬",
        (Out, Top, ProlongStart, Thick) => "┭",
        (Out, Top, ProlongStart, QuadrantInside) => "┬",
        (Out, Top, ProlongStart, QuadrantOutside) => "┬",
        (Out, Top, Start, Plain) => "├",
        (Out, Top, Start, Rounded) => "├",
        (Out, Top, Start, Double) => "├",
        (Out, Top, Start, Thick) => "┞",
        (Out, Top, Start, QuadrantInside) => "├",
        (Out, Top, Start, QuadrantOutside) => "├",
        (Out, Top, Pos(_), Plain) => "┴",
        (Out, Top, Pos(_), Rounded) => "┴",
        (Out, Top, Pos(_), Double) => "╨",
        (Out, Top, Pos(_), Thick) => "┸",
        (Out, Top, Pos(_), QuadrantInside) => "┴",
        (Out, Top, Pos(_), QuadrantOutside) => "┴",
        (Out, Top, End, Plain) => "┤",
        (Out, Top, End, Rounded) => "┤",
        (Out, Top, End, Double) => "┤",
        (Out, Top, End, Thick) => "┦",
        (Out, Top, End, QuadrantInside) => "┤",
        (Out, Top, End, QuadrantOutside) => "┤",
        (Out, Top, ProlongEnd, Plain) => "┬",
        (Out, Top, ProlongEnd, Rounded) => "┬",
        (Out, Top, ProlongEnd, Double) => "┬",
        (Out, Top, ProlongEnd, Thick) => "┮",
        (Out, Top, ProlongEnd, QuadrantInside) => "┬",
        (Out, Top, ProlongEnd, QuadrantOutside) => "┬",
        (Out, Top, CrossEnd(_), Plain) => "┼",
        (Out, Top, CrossEnd(_), Rounded) => "┼",
        (Out, Top, CrossEnd(_), Double) => "┼",
        (Out, Top, CrossEnd(Thick), Thick) => "╄",
        (Out, Top, CrossEnd(_), Thick) => "╀",
        (Out, Top, CrossEnd(Thick), _) => "┾",
        (Out, Top, CrossEnd(_), QuadrantInside) => "┼",
        (Out, Top, CrossEnd(_), QuadrantOutside) => "┼",

        (Out, Right, CrossStart(_), Plain) => "┼",
        (Out, Right, CrossStart(_), Rounded) => "┼",
        (Out, Right, CrossStart(_), Double) => "┼",
        (Out, Right, CrossStart(Thick), Thick) => "╄",
        (Out, Right, CrossStart(_), Thick) => "╀",
        (Out, Right, CrossStart(Thick), _) => "┾",
        (Out, Right, CrossStart(_), QuadrantInside) => "┼",
        (Out, Right, CrossStart(_), QuadrantOutside) => "┼",
        (Out, Right, ProlongStart, Plain) => "┤",
        (Out, Right, ProlongStart, Rounded) => "┤",
        (Out, Right, ProlongStart, Double) => "┤",
        (Out, Right, ProlongStart, Thick) => "┦",
        (Out, Right, ProlongStart, QuadrantInside) => "┤",
        (Out, Right, ProlongStart, QuadrantOutside) => "┤",
        (Out, Right, Start, Plain) => "┬",
        (Out, Right, Start, Rounded) => "┬",
        (Out, Right, Start, Double) => "┬",
        (Out, Right, Start, Thick) => "┮",
        (Out, Right, Start, QuadrantInside) => "┬",
        (Out, Right, Start, QuadrantOutside) => "┬",
        (Out, Right, Pos(_), Plain) => "├",
        (Out, Right, Pos(_), Double) => "╞",
        (Out, Right, Pos(_), Thick) => "┝",
        (Out, Right, Pos(_), QuadrantInside) => "├",
        (Out, Right, Pos(_), QuadrantOutside) => "├",
        (Out, Right, Pos(_), Rounded) => "├",
        (Out, Right, End, Plain) => "┴",
        (Out, Right, End, Rounded) => "┴",
        (Out, Right, End, Double) => "┴",
        (Out, Right, End, Thick) => "┶",
        (Out, Right, End, QuadrantInside) => "┴",
        (Out, Right, End, QuadrantOutside) => "┴",
        (Out, Right, ProlongEnd, Plain) => "┤",
        (Out, Right, ProlongEnd, Rounded) => "┤",
        (Out, Right, ProlongEnd, Double) => "┤",
        (Out, Right, ProlongEnd, Thick) => "┧",
        (Out, Right, ProlongEnd, QuadrantInside) => "┤",
        (Out, Right, ProlongEnd, QuadrantOutside) => "┤",
        (Out, Right, CrossEnd(_), Plain) => "┼",
        (Out, Right, CrossEnd(_), Rounded) => "┼",
        (Out, Right, CrossEnd(_), Double) => "┼",
        (Out, Right, CrossEnd(Thick), Thick) => "╆",
        (Out, Right, CrossEnd(_), Thick) => "┾",
        (Out, Right, CrossEnd(Thick), _) => "╁",
        (Out, Right, CrossEnd(_), QuadrantInside) => "┼",
        (Out, Right, CrossEnd(_), QuadrantOutside) => "┼",

        (Out, Bottom, CrossStart(_), Plain) => "┼",
        (Out, Bottom, CrossStart(_), Rounded) => "┼",
        (Out, Bottom, CrossStart(_), Double) => "┼",
        (Out, Bottom, CrossStart(Thick), Thick) => "╅",
        (Out, Bottom, CrossStart(_), Thick) => "╁",
        (Out, Bottom, CrossStart(Thick), _) => "┽",
        (Out, Bottom, CrossStart(_), QuadrantInside) => "┼",
        (Out, Bottom, CrossStart(_), QuadrantOutside) => "┼",
        (Out, Bottom, ProlongStart, Plain) => "┴",
        (Out, Bottom, ProlongStart, Rounded) => "┴",
        (Out, Bottom, ProlongStart, Double) => "┴",
        (Out, Bottom, ProlongStart, Thick) => "┵",
        (Out, Bottom, ProlongStart, QuadrantInside) => "┴",
        (Out, Bottom, ProlongStart, QuadrantOutside) => "┴",
        (Out, Bottom, Start, Plain) => "├",
        (Out, Bottom, Start, Rounded) => "├",
        (Out, Bottom, Start, Double) => "├",
        (Out, Bottom, Start, Thick) => "┟",
        (Out, Bottom, Start, QuadrantInside) => "├",
        (Out, Bottom, Start, QuadrantOutside) => "├",
        (Out, Bottom, Pos(_), Plain) => "┬",
        (Out, Bottom, Pos(_), Rounded) => "┬",
        (Out, Bottom, Pos(_), Double) => "╥",
        (Out, Bottom, Pos(_), Thick) => "┰",
        (Out, Bottom, Pos(_), QuadrantInside) => "┬",
        (Out, Bottom, Pos(_), QuadrantOutside) => "┬",
        (Out, Bottom, End, Plain) => "┤",
        (Out, Bottom, End, Rounded) => "┤",
        (Out, Bottom, End, Double) => "┤",
        (Out, Bottom, End, Thick) => "┧",
        (Out, Bottom, End, QuadrantInside) => "┤",
        (Out, Bottom, End, QuadrantOutside) => "┤",
        (Out, Bottom, ProlongEnd, Plain) => "┴",
        (Out, Bottom, ProlongEnd, Rounded) => "┴",
        (Out, Bottom, ProlongEnd, Double) => "┴",
        (Out, Bottom, ProlongEnd, Thick) => "┶",
        (Out, Bottom, ProlongEnd, QuadrantInside) => "┴",
        (Out, Bottom, ProlongEnd, QuadrantOutside) => "┴",
        (Out, Bottom, CrossEnd(_), Plain) => "┼",
        (Out, Bottom, CrossEnd(_), Rounded) => "┼",
        (Out, Bottom, CrossEnd(_), Double) => "┼",
        (Out, Bottom, CrossEnd(Thick), Thick) => "╆",
        (Out, Bottom, CrossEnd(_), Thick) => "┾",
        (Out, Bottom, CrossEnd(Thick), _) => "╁",
        (Out, Bottom, CrossEnd(_), QuadrantInside) => "┼",
        (Out, Bottom, CrossEnd(_), QuadrantOutside) => "┼",

        (Out, Left, CrossStart(_), Plain) => "┼",
        (Out, Left, CrossStart(_), Rounded) => "┼",
        (Out, Left, CrossStart(_), Double) => "┼",
        (Out, Left, CrossStart(Thick), Thick) => "╃",
        (Out, Left, CrossStart(_), Thick) => "┽",
        (Out, Left, CrossStart(Thick), _) => "╀",
        (Out, Left, CrossStart(_), QuadrantInside) => "┼",
        (Out, Left, CrossStart(_), QuadrantOutside) => "┼",
        (Out, Left, ProlongStart, Plain) => "├",
        (Out, Left, ProlongStart, Rounded) => "├",
        (Out, Left, ProlongStart, Double) => "├",
        (Out, Left, ProlongStart, Thick) => "┞",
        (Out, Left, ProlongStart, QuadrantInside) => "├",
        (Out, Left, ProlongStart, QuadrantOutside) => "├",
        (Out, Left, Start, Plain) => "┬",
        (Out, Left, Start, Rounded) => "┬",
        (Out, Left, Start, Double) => "┬",
        (Out, Left, Start, Thick) => "┭",
        (Out, Left, Start, QuadrantInside) => "┬",
        (Out, Left, Start, QuadrantOutside) => "┬",
        (Out, Left, Pos(_), Plain) => "┤",
        (Out, Left, Pos(_), Rounded) => "┤",
        (Out, Left, Pos(_), Double) => "╡",
        (Out, Left, Pos(_), Thick) => "┥",
        (Out, Left, Pos(_), QuadrantInside) => "┤",
        (Out, Left, Pos(_), QuadrantOutside) => "┤",
        (Out, Left, End, Plain) => "┴",
        (Out, Left, End, Rounded) => "┴",
        (Out, Left, End, Double) => "┴",
        (Out, Left, End, Thick) => "┵",
        (Out, Left, End, QuadrantInside) => "┴",
        (Out, Left, End, QuadrantOutside) => "┴",
        (Out, Left, ProlongEnd, Plain) => "├",
        (Out, Left, ProlongEnd, Rounded) => "├",
        (Out, Left, ProlongEnd, Double) => "├",
        (Out, Left, ProlongEnd, Thick) => "┟",
        (Out, Left, ProlongEnd, QuadrantInside) => "├",
        (Out, Left, ProlongEnd, QuadrantOutside) => "├",
        (Out, Left, CrossEnd(_), Plain) => "┼",
        (Out, Left, CrossEnd(_), Rounded) => "┼",
        (Out, Left, CrossEnd(_), Double) => "┼",
        (Out, Left, CrossEnd(Thick), Thick) => "╅",
        (Out, Left, CrossEnd(_), Thick) => "┽",
        (Out, Left, CrossEnd(Thick), _) => "╁",
        (Out, Left, CrossEnd(_), QuadrantInside) => "┼",
        (Out, Left, CrossEnd(_), QuadrantOutside) => "┼",

        // -------------------------------------------------
        (In, Top, CrossStart(_), _) => "X",
        (In, Top, ProlongStart, Plain) => "┌",
        (In, Top, ProlongStart, Rounded) => "┌",
        (In, Top, ProlongStart, Double) => "┌",
        (In, Top, ProlongStart, Thick) => "┌",
        (In, Top, ProlongStart, QuadrantInside) => "┌",
        (In, Top, ProlongStart, QuadrantOutside) => "┌",
        (In, Top, Start, Plain) => "┌",
        (In, Top, Start, Rounded) => "┌",
        (In, Top, Start, Double) => "┌",
        (In, Top, Start, Thick) => "┌",
        (In, Top, Start, QuadrantInside) => "┌",
        (In, Top, Start, QuadrantOutside) => "┌",
        (In, Top, Pos(_), Plain) => "┬",
        (In, Top, Pos(_), Rounded) => "┬",
        (In, Top, Pos(_), Double) => "╥",
        (In, Top, Pos(_), Thick) => "┰",
        (In, Top, Pos(_), QuadrantInside) => "┬",
        (In, Top, Pos(_), QuadrantOutside) => "┬",
        (In, Top, End, Plain) => "┐",
        (In, Top, End, Rounded) => "┐",
        (In, Top, End, Double) => "┐",
        (In, Top, End, Thick) => "┐",
        (In, Top, End, QuadrantInside) => "┐",
        (In, Top, End, QuadrantOutside) => "┐",
        (In, Top, ProlongEnd, Plain) => "┐",
        (In, Top, ProlongEnd, Rounded) => "┐",
        (In, Top, ProlongEnd, Double) => "┐",
        (In, Top, ProlongEnd, Thick) => "┐",
        (In, Top, ProlongEnd, QuadrantInside) => "┐",
        (In, Top, ProlongEnd, QuadrantOutside) => "┐",
        (In, Top, CrossEnd(_), _) => "X",

        (In, Right, CrossStart(_), _) => "X",
        (In, Right, ProlongStart, Plain) => "┐",
        (In, Right, ProlongStart, Rounded) => "┐",
        (In, Right, ProlongStart, Double) => "┐",
        (In, Right, ProlongStart, Thick) => "┐",
        (In, Right, ProlongStart, QuadrantInside) => "┐",
        (In, Right, ProlongStart, QuadrantOutside) => "┐",
        (In, Right, Start, Plain) => "┐",
        (In, Right, Start, Rounded) => "┐",
        (In, Right, Start, Double) => "┐",
        (In, Right, Start, Thick) => "┐",
        (In, Right, Start, QuadrantInside) => "┐",
        (In, Right, Start, QuadrantOutside) => "┐",
        (In, Right, Pos(_), Plain) => "┤",
        (In, Right, Pos(_), Rounded) => "┤",
        (In, Right, Pos(_), Double) => "╡",
        (In, Right, Pos(_), Thick) => "┥",
        (In, Right, Pos(_), QuadrantInside) => "┤",
        (In, Right, Pos(_), QuadrantOutside) => "┤",
        (In, Right, End, Plain) => "┘",
        (In, Right, End, Rounded) => "┘",
        (In, Right, End, Double) => "┘",
        (In, Right, End, Thick) => "┘",
        (In, Right, End, QuadrantInside) => "┘",
        (In, Right, End, QuadrantOutside) => "┘",
        (In, Right, ProlongEnd, Plain) => "┘",
        (In, Right, ProlongEnd, Rounded) => "┘",
        (In, Right, ProlongEnd, Double) => "┘",
        (In, Right, ProlongEnd, Thick) => "┘",
        (In, Right, ProlongEnd, QuadrantInside) => "┘",
        (In, Right, ProlongEnd, QuadrantOutside) => "┘",
        (In, Right, CrossEnd(_), _) => "X",

        (In, Bottom, CrossStart(_), _) => "X",
        (In, Bottom, ProlongStart, Plain) => "└",
        (In, Bottom, ProlongStart, Rounded) => "└",
        (In, Bottom, ProlongStart, Double) => "└",
        (In, Bottom, ProlongStart, Thick) => "└",
        (In, Bottom, ProlongStart, QuadrantInside) => "┘",
        (In, Bottom, ProlongStart, QuadrantOutside) => "┘",
        (In, Bottom, Start, Plain) => "└",
        (In, Bottom, Start, Rounded) => "└",
        (In, Bottom, Start, Double) => "└",
        (In, Bottom, Start, Thick) => "└",
        (In, Bottom, Start, QuadrantInside) => "┘",
        (In, Bottom, Start, QuadrantOutside) => "┘",
        (In, Bottom, Pos(_), Plain) => "┴",
        (In, Bottom, Pos(_), Rounded) => "┴",
        (In, Bottom, Pos(_), Double) => "╨",
        (In, Bottom, Pos(_), Thick) => "┸",
        (In, Bottom, Pos(_), QuadrantInside) => "┘",
        (In, Bottom, Pos(_), QuadrantOutside) => "┘",
        (In, Bottom, End, Plain) => "┘",
        (In, Bottom, End, Rounded) => "┘",
        (In, Bottom, End, Double) => "┘",
        (In, Bottom, End, Thick) => "┘",
        (In, Bottom, End, QuadrantInside) => "┘",
        (In, Bottom, End, QuadrantOutside) => "┘",
        (In, Bottom, ProlongEnd, Plain) => "┘",
        (In, Bottom, ProlongEnd, Rounded) => "┘",
        (In, Bottom, ProlongEnd, Double) => "┘",
        (In, Bottom, ProlongEnd, Thick) => "┘",
        (In, Bottom, ProlongEnd, QuadrantInside) => "┘",
        (In, Bottom, ProlongEnd, QuadrantOutside) => "┘",
        (In, Bottom, CrossEnd(_), _) => "X",

        (In, Left, CrossStart(_), _) => "X",
        (In, Left, ProlongStart, Plain) => "┌",
        (In, Left, ProlongStart, Rounded) => "┌",
        (In, Left, ProlongStart, Double) => "┌",
        (In, Left, ProlongStart, Thick) => "┌",
        (In, Left, ProlongStart, QuadrantInside) => "┌",
        (In, Left, ProlongStart, QuadrantOutside) => "┌",
        (In, Left, Start, Plain) => "┌",
        (In, Left, Start, Rounded) => "┌",
        (In, Left, Start, Double) => "┌",
        (In, Left, Start, Thick) => "┌",
        (In, Left, Start, QuadrantInside) => "┌",
        (In, Left, Start, QuadrantOutside) => "┌",
        (In, Left, Pos(_), Plain) => "├",
        (In, Left, Pos(_), Rounded) => "├",
        (In, Left, Pos(_), Double) => "╞",
        (In, Left, Pos(_), Thick) => "┝",
        (In, Left, Pos(_), QuadrantInside) => "├",
        (In, Left, Pos(_), QuadrantOutside) => "├",
        (In, Left, End, Plain) => "└",
        (In, Left, End, Rounded) => "└",
        (In, Left, End, Double) => "└",
        (In, Left, End, Thick) => "└",
        (In, Left, End, QuadrantInside) => "└",
        (In, Left, End, QuadrantOutside) => "└",
        (In, Left, ProlongEnd, Plain) => "└",
        (In, Left, ProlongEnd, Rounded) => "└",
        (In, Left, ProlongEnd, Double) => "└",
        (In, Left, ProlongEnd, Thick) => "└",
        (In, Left, ProlongEnd, QuadrantInside) => "└",
        (In, Left, ProlongEnd, QuadrantOutside) => "└",
        (In, Left, CrossEnd(_), _) => "X",

        // ----------------------------------------------
        (Through, Top, CrossStart(_), Plain) => "┼",
        (Through, Top, CrossStart(_), Rounded) => "┼",
        (Through, Top, CrossStart(_), Double) => "┼",
        (Through, Top, CrossStart(Thick), Thick) => "╃",
        (Through, Top, CrossStart(_), Thick) => "╀",
        (Through, Top, CrossStart(Thick), _) => "┽",
        (Through, Top, CrossStart(_), QuadrantInside) => "┼",
        (Through, Top, CrossStart(_), QuadrantOutside) => "┼",
        (Through, Top, ProlongStart, Plain) => "┬",
        (Through, Top, ProlongStart, Rounded) => "┬",
        (Through, Top, ProlongStart, Double) => "┬",
        (Through, Top, ProlongStart, Thick) => "┭",
        (Through, Top, ProlongStart, QuadrantInside) => "┬",
        (Through, Top, ProlongStart, QuadrantOutside) => "┬",
        (Through, Top, Start, Plain) => "├",
        (Through, Top, Start, Rounded) => "├",
        (Through, Top, Start, Double) => "├",
        (Through, Top, Start, Thick) => "┞",
        (Through, Top, Start, QuadrantInside) => "├",
        (Through, Top, Start, QuadrantOutside) => "├",
        (Through, Top, Pos(_), Plain) => "┼",
        (Through, Top, Pos(_), Rounded) => "┼",
        (Through, Top, Pos(_), Double) => "╫",
        (Through, Top, Pos(_), Thick) => "╂",
        (Through, Top, Pos(_), QuadrantInside) => "┼",
        (Through, Top, Pos(_), QuadrantOutside) => "┼",
        (Through, Top, End, Plain) => "┤",
        (Through, Top, End, Rounded) => "┤",
        (Through, Top, End, Double) => "┤",
        (Through, Top, End, Thick) => "┦",
        (Through, Top, End, QuadrantInside) => "┤",
        (Through, Top, End, QuadrantOutside) => "┤",
        (Through, Top, ProlongEnd, Plain) => "┬",
        (Through, Top, ProlongEnd, Rounded) => "┬",
        (Through, Top, ProlongEnd, Double) => "┬",
        (Through, Top, ProlongEnd, Thick) => "┮",
        (Through, Top, ProlongEnd, QuadrantInside) => "┬",
        (Through, Top, ProlongEnd, QuadrantOutside) => "┬",
        (Through, Top, CrossEnd(_), Plain) => "┼",
        (Through, Top, CrossEnd(_), Rounded) => "┼",
        (Through, Top, CrossEnd(_), Double) => "┼",
        (Through, Top, CrossEnd(Thick), Thick) => "╄",
        (Through, Top, CrossEnd(_), Thick) => "╀",
        (Through, Top, CrossEnd(Thick), _) => "┾",
        (Through, Top, CrossEnd(_), QuadrantInside) => "┼",
        (Through, Top, CrossEnd(_), QuadrantOutside) => "┼",

        (Through, Right, CrossStart(_), Plain) => "┼",
        (Through, Right, CrossStart(_), Rounded) => "┼",
        (Through, Right, CrossStart(_), Double) => "┼",
        (Through, Right, CrossStart(Thick), Thick) => "╄",
        (Through, Right, CrossStart(_), Thick) => "╀",
        (Through, Right, CrossStart(Thick), _) => "┾",
        (Through, Right, CrossStart(_), QuadrantInside) => "┼",
        (Through, Right, CrossStart(_), QuadrantOutside) => "┼",
        (Through, Right, ProlongStart, Plain) => "┤",
        (Through, Right, ProlongStart, Rounded) => "┤",
        (Through, Right, ProlongStart, Double) => "┤",
        (Through, Right, ProlongStart, Thick) => "┦",
        (Through, Right, ProlongStart, QuadrantInside) => "┤",
        (Through, Right, ProlongStart, QuadrantOutside) => "┤",
        (Through, Right, Start, Plain) => "┬",
        (Through, Right, Start, Rounded) => "┬",
        (Through, Right, Start, Double) => "┬",
        (Through, Right, Start, Thick) => "┮",
        (Through, Right, Start, QuadrantInside) => "┬",
        (Through, Right, Start, QuadrantOutside) => "┬",
        (Through, Right, Pos(_), Plain) => "┼",
        (Through, Right, Pos(_), Rounded) => "┼",
        (Through, Right, Pos(_), Double) => "╪",
        (Through, Right, Pos(_), Thick) => "┿",
        (Through, Right, Pos(_), QuadrantInside) => "┼",
        (Through, Right, Pos(_), QuadrantOutside) => "┼",
        (Through, Right, End, Plain) => "┴",
        (Through, Right, End, Rounded) => "┴",
        (Through, Right, End, Double) => "┴",
        (Through, Right, End, Thick) => "┶",
        (Through, Right, End, QuadrantInside) => "┴",
        (Through, Right, End, QuadrantOutside) => "┴",
        (Through, Right, ProlongEnd, Plain) => "┤",
        (Through, Right, ProlongEnd, Rounded) => "┤",
        (Through, Right, ProlongEnd, Double) => "┤",
        (Through, Right, ProlongEnd, Thick) => "┧",
        (Through, Right, ProlongEnd, QuadrantInside) => "┤",
        (Through, Right, ProlongEnd, QuadrantOutside) => "┤",
        (Through, Right, CrossEnd(_), Plain) => "┼",
        (Through, Right, CrossEnd(_), Rounded) => "┼",
        (Through, Right, CrossEnd(_), Double) => "┼",
        (Through, Right, CrossEnd(Thick), Thick) => "╆",
        (Through, Right, CrossEnd(_), Thick) => "┾",
        (Through, Right, CrossEnd(Thick), _) => "╁",
        (Through, Right, CrossEnd(_), QuadrantInside) => "┼",
        (Through, Right, CrossEnd(_), QuadrantOutside) => "┼",

        (Through, Bottom, CrossStart(_), Plain) => "┼",
        (Through, Bottom, CrossStart(_), Rounded) => "┼",
        (Through, Bottom, CrossStart(_), Double) => "┼",
        (Through, Bottom, CrossStart(Thick), Thick) => "╅",
        (Through, Bottom, CrossStart(_), Thick) => "╁",
        (Through, Bottom, CrossStart(Thick), _) => "┽",
        (Through, Bottom, CrossStart(_), QuadrantInside) => "┼",
        (Through, Bottom, CrossStart(_), QuadrantOutside) => "┼",
        (Through, Bottom, ProlongStart, Plain) => "┴",
        (Through, Bottom, ProlongStart, Rounded) => "┴",
        (Through, Bottom, ProlongStart, Double) => "┴",
        (Through, Bottom, ProlongStart, Thick) => "┵",
        (Through, Bottom, ProlongStart, QuadrantInside) => "┴",
        (Through, Bottom, ProlongStart, QuadrantOutside) => "┴",
        (Through, Bottom, Start, Plain) => "├",
        (Through, Bottom, Start, Rounded) => "├",
        (Through, Bottom, Start, Double) => "├",
        (Through, Bottom, Start, Thick) => "┟",
        (Through, Bottom, Start, QuadrantInside) => "├",
        (Through, Bottom, Start, QuadrantOutside) => "├",
        (Through, Bottom, Pos(_), Plain) => "┼",
        (Through, Bottom, Pos(_), Rounded) => "┼",
        (Through, Bottom, Pos(_), Double) => "╫",
        (Through, Bottom, Pos(_), Thick) => "╂",
        (Through, Bottom, Pos(_), QuadrantInside) => "┼",
        (Through, Bottom, Pos(_), QuadrantOutside) => "┼",
        (Through, Bottom, End, Plain) => "┤",
        (Through, Bottom, End, Rounded) => "┤",
        (Through, Bottom, End, Double) => "┤",
        (Through, Bottom, End, Thick) => "┧",
        (Through, Bottom, End, QuadrantInside) => "┤",
        (Through, Bottom, End, QuadrantOutside) => "┤",
        (Through, Bottom, ProlongEnd, Plain) => "┴",
        (Through, Bottom, ProlongEnd, Rounded) => "┴",
        (Through, Bottom, ProlongEnd, Double) => "┴",
        (Through, Bottom, ProlongEnd, Thick) => "┶",
        (Through, Bottom, ProlongEnd, QuadrantInside) => "┴",
        (Through, Bottom, ProlongEnd, QuadrantOutside) => "┴",
        (Through, Bottom, CrossEnd(_), Plain) => "┼",
        (Through, Bottom, CrossEnd(_), Rounded) => "┼",
        (Through, Bottom, CrossEnd(_), Double) => "┼",
        (Through, Bottom, CrossEnd(Thick), Thick) => "╆",
        (Through, Bottom, CrossEnd(_), Thick) => "┾",
        (Through, Bottom, CrossEnd(Thick), _) => "╁",
        (Through, Bottom, CrossEnd(_), QuadrantInside) => "┼",
        (Through, Bottom, CrossEnd(_), QuadrantOutside) => "┼",

        (Through, Left, CrossStart(_), Plain) => "┼",
        (Through, Left, CrossStart(_), Rounded) => "┼",
        (Through, Left, CrossStart(_), Double) => "┼",
        (Through, Left, CrossStart(Thick), Thick) => "╃",
        (Through, Left, CrossStart(_), Thick) => "┽",
        (Through, Left, CrossStart(Thick), _) => "╀",
        (Through, Left, CrossStart(_), QuadrantInside) => "┼",
        (Through, Left, CrossStart(_), QuadrantOutside) => "┼",
        (Through, Left, ProlongStart, Plain) => "├",
        (Through, Left, ProlongStart, Rounded) => "├",
        (Through, Left, ProlongStart, Double) => "├",
        (Through, Left, ProlongStart, Thick) => "┞",
        (Through, Left, ProlongStart, QuadrantInside) => "├",
        (Through, Left, ProlongStart, QuadrantOutside) => "├",
        (Through, Left, Start, Plain) => "┬",
        (Through, Left, Start, Rounded) => "┬",
        (Through, Left, Start, Double) => "┬",
        (Through, Left, Start, Thick) => "┭",
        (Through, Left, Start, QuadrantInside) => "┬",
        (Through, Left, Start, QuadrantOutside) => "┬",
        (Through, Left, Pos(_), Plain) => "┼",
        (Through, Left, Pos(_), Rounded) => "┼",
        (Through, Left, Pos(_), Double) => "╪",
        (Through, Left, Pos(_), Thick) => "┿",
        (Through, Left, Pos(_), QuadrantInside) => "┼",
        (Through, Left, Pos(_), QuadrantOutside) => "┼",
        (Through, Left, End, Plain) => "┴",
        (Through, Left, End, Rounded) => "┴",
        (Through, Left, End, Double) => "┴",
        (Through, Left, End, Thick) => "┵",
        (Through, Left, End, QuadrantInside) => "┴",
        (Through, Left, End, QuadrantOutside) => "┴",
        (Through, Left, ProlongEnd, Plain) => "├",
        (Through, Left, ProlongEnd, Rounded) => "├",
        (Through, Left, ProlongEnd, Double) => "├",
        (Through, Left, ProlongEnd, Thick) => "┟",
        (Through, Left, ProlongEnd, QuadrantInside) => "├",
        (Through, Left, ProlongEnd, QuadrantOutside) => "├",
        (Through, Left, CrossEnd(_), Plain) => "┼",
        (Through, Left, CrossEnd(_), Rounded) => "┼",
        (Through, Left, CrossEnd(_), Double) => "┼",
        (Through, Left, CrossEnd(Thick), Thick) => "╅",
        (Through, Left, CrossEnd(_), Thick) => "┽",
        (Through, Left, CrossEnd(Thick), _) => "╁",
        (Through, Left, CrossEnd(_), QuadrantInside) => "┼",
        (Through, Left, CrossEnd(_), QuadrantOutside) => "┼",

        (Manual(cc), _, _, _) => cc,
    }
}

fn double_joint(joint: Joint) -> &'static str {
    use BorderType::*;
    use JointMark::*;
    use JointPos::*;
    use JointSide::*;

    match (joint.mark, joint.side, joint.pos, joint.other_border) {
        (Out, Top, CrossStart(_), _) => "X",
        (Out, Top, ProlongStart, Plain) => "╦",
        (Out, Top, ProlongStart, Rounded) => "╦",
        (Out, Top, ProlongStart, Double) => "╦",
        (Out, Top, ProlongStart, Thick) => "╦",
        (Out, Top, ProlongStart, QuadrantInside) => "╦",
        (Out, Top, ProlongStart, QuadrantOutside) => "╦",
        (Out, Top, Start, Plain) => "╠",
        (Out, Top, Start, Rounded) => "╠",
        (Out, Top, Start, Double) => "╠",
        (Out, Top, Start, Thick) => "╠",
        (Out, Top, Start, QuadrantInside) => "╠",
        (Out, Top, Start, QuadrantOutside) => "╠",
        (Out, Top, Pos(_), Plain) => "╧",
        (Out, Top, Pos(_), Rounded) => "╧",
        (Out, Top, Pos(_), Double) => "╩",
        (Out, Top, Pos(_), Thick) => "╩",
        (Out, Top, Pos(_), QuadrantInside) => "╩",
        (Out, Top, Pos(_), QuadrantOutside) => "╩",
        (Out, Top, End, Plain) => "╣",
        (Out, Top, End, Rounded) => "╣",
        (Out, Top, End, Double) => "╣",
        (Out, Top, End, Thick) => "╣",
        (Out, Top, End, QuadrantInside) => "╣",
        (Out, Top, End, QuadrantOutside) => "╣",
        (Out, Top, ProlongEnd, Plain) => "╦",
        (Out, Top, ProlongEnd, Rounded) => "╦",
        (Out, Top, ProlongEnd, Double) => "╦",
        (Out, Top, ProlongEnd, Thick) => "╦",
        (Out, Top, ProlongEnd, QuadrantInside) => "╦",
        (Out, Top, ProlongEnd, QuadrantOutside) => "╦",
        (Out, Top, CrossEnd(_), _) => "X",

        (Out, Right, CrossStart(_), _) => "X",
        (Out, Right, ProlongStart, Plain) => "╣",
        (Out, Right, ProlongStart, Rounded) => "╣",
        (Out, Right, ProlongStart, Double) => "╣",
        (Out, Right, ProlongStart, Thick) => "╣",
        (Out, Right, ProlongStart, QuadrantInside) => "╣",
        (Out, Right, ProlongStart, QuadrantOutside) => "╣",
        (Out, Right, Start, Plain) => "╦",
        (Out, Right, Start, Rounded) => "╦",
        (Out, Right, Start, Double) => "╦",
        (Out, Right, Start, Thick) => "╦",
        (Out, Right, Start, QuadrantInside) => "╦",
        (Out, Right, Start, QuadrantOutside) => "╦",
        (Out, Right, Pos(_), Plain) => "╟",
        (Out, Right, Pos(_), Rounded) => "╟",
        (Out, Right, Pos(_), Double) => "╠",
        (Out, Right, Pos(_), Thick) => "╠",
        (Out, Right, Pos(_), QuadrantInside) => "╟",
        (Out, Right, Pos(_), QuadrantOutside) => "╟",
        (Out, Right, End, Plain) => "╩",
        (Out, Right, End, Rounded) => "╩",
        (Out, Right, End, Double) => "╩",
        (Out, Right, End, Thick) => "╩",
        (Out, Right, End, QuadrantInside) => "╩",
        (Out, Right, End, QuadrantOutside) => "╩",
        (Out, Right, ProlongEnd, Plain) => "╣",
        (Out, Right, ProlongEnd, Rounded) => "╣",
        (Out, Right, ProlongEnd, Double) => "╣",
        (Out, Right, ProlongEnd, Thick) => "╣",
        (Out, Right, ProlongEnd, QuadrantInside) => "╣",
        (Out, Right, ProlongEnd, QuadrantOutside) => "╣",
        (Out, Right, CrossEnd(_), _) => "X",

        (Out, Bottom, CrossStart(_), _) => "X",
        (Out, Bottom, ProlongStart, Plain) => "╩",
        (Out, Bottom, ProlongStart, Rounded) => "╩",
        (Out, Bottom, ProlongStart, Double) => "╩",
        (Out, Bottom, ProlongStart, Thick) => "╩",
        (Out, Bottom, ProlongStart, QuadrantInside) => "╩",
        (Out, Bottom, ProlongStart, QuadrantOutside) => "╩",
        (Out, Bottom, Start, Plain) => "╠",
        (Out, Bottom, Start, Rounded) => "╠",
        (Out, Bottom, Start, Double) => "╠",
        (Out, Bottom, Start, Thick) => "╠",
        (Out, Bottom, Start, QuadrantInside) => "╠",
        (Out, Bottom, Start, QuadrantOutside) => "╠",
        (Out, Bottom, Pos(_), Plain) => "╤",
        (Out, Bottom, Pos(_), Rounded) => "╤",
        (Out, Bottom, Pos(_), Double) => "╦",
        (Out, Bottom, Pos(_), Thick) => "╦",
        (Out, Bottom, Pos(_), QuadrantInside) => "╦",
        (Out, Bottom, Pos(_), QuadrantOutside) => "╦",
        (Out, Bottom, End, Plain) => "╣",
        (Out, Bottom, End, Rounded) => "╣",
        (Out, Bottom, End, Double) => "╣",
        (Out, Bottom, End, Thick) => "╣",
        (Out, Bottom, End, QuadrantInside) => "╣",
        (Out, Bottom, End, QuadrantOutside) => "╣",
        (Out, Bottom, ProlongEnd, Plain) => "╩",
        (Out, Bottom, ProlongEnd, Rounded) => "╩",
        (Out, Bottom, ProlongEnd, Double) => "╩",
        (Out, Bottom, ProlongEnd, Thick) => "╩",
        (Out, Bottom, ProlongEnd, QuadrantInside) => "╩",
        (Out, Bottom, ProlongEnd, QuadrantOutside) => "╩",
        (Out, Bottom, CrossEnd(_), _) => "X",

        (Out, Left, CrossStart(_), _) => "X",
        (Out, Left, ProlongStart, Plain) => "╠",
        (Out, Left, ProlongStart, Rounded) => "╠",
        (Out, Left, ProlongStart, Double) => "╠",
        (Out, Left, ProlongStart, Thick) => "╠",
        (Out, Left, ProlongStart, QuadrantInside) => "╠",
        (Out, Left, ProlongStart, QuadrantOutside) => "╠",
        (Out, Left, Start, Plain) => "╦",
        (Out, Left, Start, Rounded) => "╦",
        (Out, Left, Start, Double) => "╦",
        (Out, Left, Start, Thick) => "╦",
        (Out, Left, Start, QuadrantInside) => "╦",
        (Out, Left, Start, QuadrantOutside) => "╦",
        (Out, Left, Pos(_), Plain) => "╢",
        (Out, Left, Pos(_), Rounded) => "╢",
        (Out, Left, Pos(_), Double) => "╣",
        (Out, Left, Pos(_), Thick) => "╣",
        (Out, Left, Pos(_), QuadrantInside) => "╣",
        (Out, Left, Pos(_), QuadrantOutside) => "╣",
        (Out, Left, End, Plain) => "╩",
        (Out, Left, End, Rounded) => "╩",
        (Out, Left, End, Double) => "╩",
        (Out, Left, End, Thick) => "╩",
        (Out, Left, End, QuadrantInside) => "╩",
        (Out, Left, End, QuadrantOutside) => "╩",
        (Out, Left, ProlongEnd, Plain) => "╠",
        (Out, Left, ProlongEnd, Rounded) => "╠",
        (Out, Left, ProlongEnd, Double) => "╠",
        (Out, Left, ProlongEnd, Thick) => "╠",
        (Out, Left, ProlongEnd, QuadrantInside) => "╠",
        (Out, Left, ProlongEnd, QuadrantOutside) => "╠",
        (Out, Left, CrossEnd(_), _) => "X",

        // ----------------------------------------------
        (In, Top, CrossStart(_), _) => "X",
        (In, Top, ProlongStart, Plain) => "╔",
        (In, Top, ProlongStart, Rounded) => "╔",
        (In, Top, ProlongStart, Double) => "╔",
        (In, Top, ProlongStart, Thick) => "╔",
        (In, Top, ProlongStart, QuadrantInside) => "╔",
        (In, Top, ProlongStart, QuadrantOutside) => "╔",
        (In, Top, Start, Plain) => "╔",
        (In, Top, Start, Rounded) => "╔",
        (In, Top, Start, Double) => "╔",
        (In, Top, Start, Thick) => "╔",
        (In, Top, Start, QuadrantInside) => "╔",
        (In, Top, Start, QuadrantOutside) => "╔",
        (In, Top, Pos(_), Plain) => "╤",
        (In, Top, Pos(_), Rounded) => "╤",
        (In, Top, Pos(_), Double) => "╦",
        (In, Top, Pos(_), Thick) => "╦",
        (In, Top, Pos(_), QuadrantInside) => "╦",
        (In, Top, Pos(_), QuadrantOutside) => "╦",
        (In, Top, End, Plain) => "╗",
        (In, Top, End, Rounded) => "╗",
        (In, Top, End, Double) => "╗",
        (In, Top, End, Thick) => "╗",
        (In, Top, End, QuadrantInside) => "╗",
        (In, Top, End, QuadrantOutside) => "╗",
        (In, Top, ProlongEnd, Plain) => "╗",
        (In, Top, ProlongEnd, Rounded) => "╗",
        (In, Top, ProlongEnd, Double) => "╗",
        (In, Top, ProlongEnd, Thick) => "╗",
        (In, Top, ProlongEnd, QuadrantInside) => "╗",
        (In, Top, ProlongEnd, QuadrantOutside) => "╗",
        (In, Top, CrossEnd(_), _) => "X",

        (In, Right, CrossStart(_), _) => "X",
        (In, Right, ProlongStart, Plain) => "╗",
        (In, Right, ProlongStart, Rounded) => "╗",
        (In, Right, ProlongStart, Double) => "╗",
        (In, Right, ProlongStart, Thick) => "╗",
        (In, Right, ProlongStart, QuadrantInside) => "╗",
        (In, Right, ProlongStart, QuadrantOutside) => "╗",
        (In, Right, Start, Plain) => "╗",
        (In, Right, Start, Rounded) => "╗",
        (In, Right, Start, Double) => "╗",
        (In, Right, Start, Thick) => "╗",
        (In, Right, Start, QuadrantInside) => "╗",
        (In, Right, Start, QuadrantOutside) => "╗",
        (In, Right, Pos(_), Plain) => "╢",
        (In, Right, Pos(_), Rounded) => "╢",
        (In, Right, Pos(_), Double) => "╣",
        (In, Right, Pos(_), Thick) => "╣",
        (In, Right, Pos(_), QuadrantInside) => "╣",
        (In, Right, Pos(_), QuadrantOutside) => "╣",
        (In, Right, End, Plain) => "╝",
        (In, Right, End, Rounded) => "╝",
        (In, Right, End, Double) => "╝",
        (In, Right, End, Thick) => "╝",
        (In, Right, End, QuadrantInside) => "╝",
        (In, Right, End, QuadrantOutside) => "╝",
        (In, Right, ProlongEnd, Plain) => "╝",
        (In, Right, ProlongEnd, Rounded) => "╝",
        (In, Right, ProlongEnd, Double) => "╝",
        (In, Right, ProlongEnd, Thick) => "╝",
        (In, Right, ProlongEnd, QuadrantInside) => "╝",
        (In, Right, ProlongEnd, QuadrantOutside) => "╝",
        (In, Right, CrossEnd(_), _) => "X",

        (In, Bottom, CrossStart(_), _) => "X",
        (In, Bottom, ProlongStart, Plain) => "╚",
        (In, Bottom, ProlongStart, Rounded) => "╚",
        (In, Bottom, ProlongStart, Double) => "╚",
        (In, Bottom, ProlongStart, Thick) => "╚",
        (In, Bottom, ProlongStart, QuadrantInside) => "╚",
        (In, Bottom, ProlongStart, QuadrantOutside) => "╚",
        (In, Bottom, Start, Plain) => "╚",
        (In, Bottom, Start, Rounded) => "╚",
        (In, Bottom, Start, Double) => "╚",
        (In, Bottom, Start, Thick) => "╚",
        (In, Bottom, Start, QuadrantInside) => "╚",
        (In, Bottom, Start, QuadrantOutside) => "╚",
        (In, Bottom, Pos(_), Plain) => "╧",
        (In, Bottom, Pos(_), Rounded) => "╧",
        (In, Bottom, Pos(_), Double) => "╩",
        (In, Bottom, Pos(_), Thick) => "╩",
        (In, Bottom, Pos(_), QuadrantInside) => "╩",
        (In, Bottom, Pos(_), QuadrantOutside) => "╩",
        (In, Bottom, End, Plain) => "╝",
        (In, Bottom, End, Rounded) => "╝",
        (In, Bottom, End, Double) => "╝",
        (In, Bottom, End, Thick) => "╝",
        (In, Bottom, End, QuadrantInside) => "╝",
        (In, Bottom, End, QuadrantOutside) => "╝",
        (In, Bottom, ProlongEnd, Plain) => "╝",
        (In, Bottom, ProlongEnd, Rounded) => "╝",
        (In, Bottom, ProlongEnd, Double) => "╝",
        (In, Bottom, ProlongEnd, Thick) => "╝",
        (In, Bottom, ProlongEnd, QuadrantInside) => "╝",
        (In, Bottom, ProlongEnd, QuadrantOutside) => "╝",
        (In, Bottom, CrossEnd(_), _) => "X",

        (In, Left, CrossStart(_), _) => "X",
        (In, Left, ProlongStart, Plain) => "╔",
        (In, Left, ProlongStart, Rounded) => "╔",
        (In, Left, ProlongStart, Double) => "╔",
        (In, Left, ProlongStart, Thick) => "╔",
        (In, Left, ProlongStart, QuadrantInside) => "╔",
        (In, Left, ProlongStart, QuadrantOutside) => "╔",
        (In, Left, Start, Plain) => "╔",
        (In, Left, Start, Rounded) => "╔",
        (In, Left, Start, Double) => "╔",
        (In, Left, Start, Thick) => "╔",
        (In, Left, Start, QuadrantInside) => "╔",
        (In, Left, Start, QuadrantOutside) => "╔",
        (In, Left, Pos(_), Plain) => "╟",
        (In, Left, Pos(_), Rounded) => "╟",
        (In, Left, Pos(_), Double) => "╠",
        (In, Left, Pos(_), Thick) => "╠",
        (In, Left, Pos(_), QuadrantInside) => "╠",
        (In, Left, Pos(_), QuadrantOutside) => "╠",
        (In, Left, End, Plain) => "╚",
        (In, Left, End, Rounded) => "╚",
        (In, Left, End, Double) => "╚",
        (In, Left, End, Thick) => "╚",
        (In, Left, End, QuadrantInside) => "╚",
        (In, Left, End, QuadrantOutside) => "╚",
        (In, Left, ProlongEnd, Plain) => "╚",
        (In, Left, ProlongEnd, Rounded) => "╚",
        (In, Left, ProlongEnd, Double) => "╚",
        (In, Left, ProlongEnd, Thick) => "╚",
        (In, Left, ProlongEnd, QuadrantInside) => "╚",
        (In, Left, ProlongEnd, QuadrantOutside) => "╚",
        (In, Left, CrossEnd(_), _) => "X",

        // ----------------------------------------------
        (Through, Top, CrossStart(_), _) => "X",
        (Through, Top, ProlongStart, Plain) => "╔",
        (Through, Top, ProlongStart, Rounded) => "╔",
        (Through, Top, ProlongStart, Double) => "╔",
        (Through, Top, ProlongStart, Thick) => "╔",
        (Through, Top, ProlongStart, QuadrantInside) => "╔",
        (Through, Top, ProlongStart, QuadrantOutside) => "╔",
        (Through, Top, Start, Plain) => "╔",
        (Through, Top, Start, Rounded) => "╔",
        (Through, Top, Start, Double) => "╔",
        (Through, Top, Start, Thick) => "╔",
        (Through, Top, Start, QuadrantInside) => "╔",
        (Through, Top, Start, QuadrantOutside) => "╔",
        (Through, Top, Pos(_), Plain) => "╪",
        (Through, Top, Pos(_), Rounded) => "╪",
        (Through, Top, Pos(_), Double) => "╬",
        (Through, Top, Pos(_), Thick) => "╬",
        (Through, Top, Pos(_), QuadrantInside) => "╬",
        (Through, Top, Pos(_), QuadrantOutside) => "╬",
        (Through, Top, End, Plain) => "╗",
        (Through, Top, End, Rounded) => "╗",
        (Through, Top, End, Double) => "╗",
        (Through, Top, End, Thick) => "╗",
        (Through, Top, End, QuadrantInside) => "╗",
        (Through, Top, End, QuadrantOutside) => "╗",
        (Through, Top, ProlongEnd, Plain) => "╗",
        (Through, Top, ProlongEnd, Rounded) => "╗",
        (Through, Top, ProlongEnd, Double) => "╗",
        (Through, Top, ProlongEnd, Thick) => "╗",
        (Through, Top, ProlongEnd, QuadrantInside) => "╗",
        (Through, Top, ProlongEnd, QuadrantOutside) => "╗",
        (Through, Top, CrossEnd(_), _) => "X",

        (Through, Right, CrossStart(_), _) => "X",
        (Through, Right, ProlongStart, Plain) => "╗",
        (Through, Right, ProlongStart, Rounded) => "╗",
        (Through, Right, ProlongStart, Double) => "╗",
        (Through, Right, ProlongStart, Thick) => "╗",
        (Through, Right, ProlongStart, QuadrantInside) => "╗",
        (Through, Right, ProlongStart, QuadrantOutside) => "╗",
        (Through, Right, Start, Plain) => "╗",
        (Through, Right, Start, Rounded) => "╗",
        (Through, Right, Start, Double) => "╗",
        (Through, Right, Start, Thick) => "╗",
        (Through, Right, Start, QuadrantInside) => "╗",
        (Through, Right, Start, QuadrantOutside) => "╗",
        (Through, Right, Pos(_), Plain) => "╫",
        (Through, Right, Pos(_), Rounded) => "╫",
        (Through, Right, Pos(_), Double) => "╬",
        (Through, Right, Pos(_), Thick) => "╬",
        (Through, Right, Pos(_), QuadrantInside) => "╬",
        (Through, Right, Pos(_), QuadrantOutside) => "╬",
        (Through, Right, End, Plain) => "╝",
        (Through, Right, End, Rounded) => "╝",
        (Through, Right, End, Double) => "╝",
        (Through, Right, End, Thick) => "╝",
        (Through, Right, End, QuadrantInside) => "╝",
        (Through, Right, End, QuadrantOutside) => "╝",
        (Through, Right, ProlongEnd, Plain) => "╝",
        (Through, Right, ProlongEnd, Rounded) => "╝",
        (Through, Right, ProlongEnd, Double) => "╝",
        (Through, Right, ProlongEnd, Thick) => "╝",
        (Through, Right, ProlongEnd, QuadrantInside) => "╝",
        (Through, Right, ProlongEnd, QuadrantOutside) => "╝",
        (Through, Right, CrossEnd(_), _) => "X",

        (Through, Bottom, CrossStart(_), _) => "X",
        (Through, Bottom, ProlongStart, Plain) => "╚",
        (Through, Bottom, ProlongStart, Rounded) => "╚",
        (Through, Bottom, ProlongStart, Double) => "╚",
        (Through, Bottom, ProlongStart, Thick) => "╚",
        (Through, Bottom, ProlongStart, QuadrantInside) => "╚",
        (Through, Bottom, ProlongStart, QuadrantOutside) => "╚",
        (Through, Bottom, Start, Plain) => "╚",
        (Through, Bottom, Start, Rounded) => "╚",
        (Through, Bottom, Start, Double) => "╚",
        (Through, Bottom, Start, Thick) => "╚",
        (Through, Bottom, Start, QuadrantInside) => "╚",
        (Through, Bottom, Start, QuadrantOutside) => "╚",
        (Through, Bottom, Pos(_), Plain) => "╪",
        (Through, Bottom, Pos(_), Rounded) => "╪",
        (Through, Bottom, Pos(_), Double) => "╬",
        (Through, Bottom, Pos(_), Thick) => "╬",
        (Through, Bottom, Pos(_), QuadrantInside) => "╬",
        (Through, Bottom, Pos(_), QuadrantOutside) => "╬",
        (Through, Bottom, End, Plain) => "╝",
        (Through, Bottom, End, Rounded) => "╝",
        (Through, Bottom, End, Double) => "╝",
        (Through, Bottom, End, Thick) => "╝",
        (Through, Bottom, End, QuadrantInside) => "╝",
        (Through, Bottom, End, QuadrantOutside) => "╝",
        (Through, Bottom, ProlongEnd, Plain) => "╝",
        (Through, Bottom, ProlongEnd, Rounded) => "╝",
        (Through, Bottom, ProlongEnd, Double) => "╝",
        (Through, Bottom, ProlongEnd, Thick) => "╝",
        (Through, Bottom, ProlongEnd, QuadrantInside) => "╝",
        (Through, Bottom, ProlongEnd, QuadrantOutside) => "╝",
        (Through, Bottom, CrossEnd(_), _) => "X",

        (Through, Left, CrossStart(_), _) => "X",
        (Through, Left, ProlongStart, Plain) => "╔",
        (Through, Left, ProlongStart, Rounded) => "╔",
        (Through, Left, ProlongStart, Double) => "╔",
        (Through, Left, ProlongStart, Thick) => "╔",
        (Through, Left, ProlongStart, QuadrantInside) => "╔",
        (Through, Left, ProlongStart, QuadrantOutside) => "╔",
        (Through, Left, Start, Plain) => "╔",
        (Through, Left, Start, Rounded) => "╔",
        (Through, Left, Start, Double) => "╔",
        (Through, Left, Start, Thick) => "╔",
        (Through, Left, Start, QuadrantInside) => "╔",
        (Through, Left, Start, QuadrantOutside) => "╔",
        (Through, Left, Pos(_), Plain) => "╫",
        (Through, Left, Pos(_), Rounded) => "╫",
        (Through, Left, Pos(_), Double) => "╬",
        (Through, Left, Pos(_), Thick) => "╬",
        (Through, Left, Pos(_), QuadrantInside) => "╬",
        (Through, Left, Pos(_), QuadrantOutside) => "╬",
        (Through, Left, End, Plain) => "╚",
        (Through, Left, End, Rounded) => "╚",
        (Through, Left, End, Double) => "╚",
        (Through, Left, End, Thick) => "╚",
        (Through, Left, End, QuadrantInside) => "╚",
        (Through, Left, End, QuadrantOutside) => "╚",
        (Through, Left, ProlongEnd, Plain) => "╚",
        (Through, Left, ProlongEnd, Rounded) => "╚",
        (Through, Left, ProlongEnd, Double) => "╚",
        (Through, Left, ProlongEnd, Thick) => "╚",
        (Through, Left, ProlongEnd, QuadrantInside) => "╚",
        (Through, Left, ProlongEnd, QuadrantOutside) => "╚",
        (Through, Left, CrossEnd(_), _) => "X",

        (Manual(cc), _, _, _) => cc,
    }
}

fn thick_joint(joint: Joint) -> &'static str {
    use BorderType::*;
    use JointMark::*;
    use JointPos::*;
    use JointSide::*;

    match (joint.mark, joint.side, joint.pos, joint.other_border) {
        (Out, Top, CrossStart(_), _) => "X",
        (Out, Top, ProlongStart, Plain) => "┲",
        (Out, Top, ProlongStart, Rounded) => "┲",
        (Out, Top, ProlongStart, Double) => "┳",
        (Out, Top, ProlongStart, Thick) => "┳",
        (Out, Top, ProlongStart, QuadrantInside) => "┳",
        (Out, Top, ProlongStart, QuadrantOutside) => "┳",
        (Out, Top, Start, Plain) => "┢",
        (Out, Top, Start, Rounded) => "┢",
        (Out, Top, Start, Double) => "┣",
        (Out, Top, Start, Thick) => "┣",
        (Out, Top, Start, QuadrantInside) => "┣",
        (Out, Top, Start, QuadrantOutside) => "┣",
        (Out, Top, Pos(_), Plain) => "┷",
        (Out, Top, Pos(_), Rounded) => "┷",
        (Out, Top, Pos(_), Double) => "┻",
        (Out, Top, Pos(_), Thick) => "┻",
        (Out, Top, Pos(_), QuadrantInside) => "┻",
        (Out, Top, Pos(_), QuadrantOutside) => "┻",
        (Out, Top, End, Plain) => "┪",
        (Out, Top, End, Rounded) => "┪",
        (Out, Top, End, Double) => "┫",
        (Out, Top, End, Thick) => "┫",
        (Out, Top, End, QuadrantInside) => "┫",
        (Out, Top, End, QuadrantOutside) => "┫",
        (Out, Top, ProlongEnd, Plain) => "┱",
        (Out, Top, ProlongEnd, Rounded) => "┱",
        (Out, Top, ProlongEnd, Double) => "┳",
        (Out, Top, ProlongEnd, Thick) => "┳",
        (Out, Top, ProlongEnd, QuadrantInside) => "┳",
        (Out, Top, ProlongEnd, QuadrantOutside) => "┳",
        (Out, Top, CrossEnd(_), _) => "X",

        (Out, Right, CrossStart(_), _) => "X",
        (Out, Right, ProlongStart, Plain) => "┪",
        (Out, Right, ProlongStart, Rounded) => "┪",
        (Out, Right, ProlongStart, Double) => "┫",
        (Out, Right, ProlongStart, Thick) => "┫",
        (Out, Right, ProlongStart, QuadrantInside) => "┫",
        (Out, Right, ProlongStart, QuadrantOutside) => "┫",
        (Out, Right, Start, Plain) => "┱",
        (Out, Right, Start, Rounded) => "┱",
        (Out, Right, Start, Double) => "┳",
        (Out, Right, Start, Thick) => "┳",
        (Out, Right, Start, QuadrantInside) => "┳",
        (Out, Right, Start, QuadrantOutside) => "┳",
        (Out, Right, Pos(_), Plain) => "┠",
        (Out, Right, Pos(_), Rounded) => "┠",
        (Out, Right, Pos(_), Double) => "┣",
        (Out, Right, Pos(_), Thick) => "┣",
        (Out, Right, Pos(_), QuadrantInside) => "┣",
        (Out, Right, Pos(_), QuadrantOutside) => "┣",
        (Out, Right, End, Plain) => "┹",
        (Out, Right, End, Rounded) => "┹",
        (Out, Right, End, Double) => "┻",
        (Out, Right, End, Thick) => "┻",
        (Out, Right, End, QuadrantInside) => "┻",
        (Out, Right, End, QuadrantOutside) => "┻",
        (Out, Right, ProlongEnd, Plain) => "┩",
        (Out, Right, ProlongEnd, Rounded) => "┩",
        (Out, Right, ProlongEnd, Double) => "┫",
        (Out, Right, ProlongEnd, Thick) => "┫",
        (Out, Right, ProlongEnd, QuadrantInside) => "┫",
        (Out, Right, ProlongEnd, QuadrantOutside) => "┫",
        (Out, Right, CrossEnd(_), _) => "X",

        (Out, Bottom, CrossStart(_), _) => "X",
        (Out, Bottom, ProlongStart, Plain) => "┺",
        (Out, Bottom, ProlongStart, Rounded) => "┺",
        (Out, Bottom, ProlongStart, Double) => "┻",
        (Out, Bottom, ProlongStart, Thick) => "┻",
        (Out, Bottom, ProlongStart, QuadrantInside) => "┻",
        (Out, Bottom, ProlongStart, QuadrantOutside) => "┻",
        (Out, Bottom, Start, Plain) => "┡",
        (Out, Bottom, Start, Rounded) => "┡",
        (Out, Bottom, Start, Double) => "┣",
        (Out, Bottom, Start, Thick) => "┣",
        (Out, Bottom, Start, QuadrantInside) => "┣",
        (Out, Bottom, Start, QuadrantOutside) => "┣",
        (Out, Bottom, Pos(_), Plain) => "┯",
        (Out, Bottom, Pos(_), Rounded) => "┯",
        (Out, Bottom, Pos(_), Double) => "┳",
        (Out, Bottom, Pos(_), Thick) => "┳",
        (Out, Bottom, Pos(_), QuadrantInside) => "┳",
        (Out, Bottom, Pos(_), QuadrantOutside) => "┳",
        (Out, Bottom, End, Plain) => "┩",
        (Out, Bottom, End, Rounded) => "┩",
        (Out, Bottom, End, Double) => "┫",
        (Out, Bottom, End, Thick) => "┫",
        (Out, Bottom, End, QuadrantInside) => "┫",
        (Out, Bottom, End, QuadrantOutside) => "┫",
        (Out, Bottom, ProlongEnd, Plain) => "┹",
        (Out, Bottom, ProlongEnd, Rounded) => "┹",
        (Out, Bottom, ProlongEnd, Double) => "┻",
        (Out, Bottom, ProlongEnd, Thick) => "┻",
        (Out, Bottom, ProlongEnd, QuadrantInside) => "┻",
        (Out, Bottom, ProlongEnd, QuadrantOutside) => "┻",
        (Out, Bottom, CrossEnd(_), _) => "X",

        (Out, Left, CrossStart(_), _) => "X",
        (Out, Left, ProlongStart, Plain) => "┢",
        (Out, Left, ProlongStart, Rounded) => "┢",
        (Out, Left, ProlongStart, Double) => "┣",
        (Out, Left, ProlongStart, Thick) => "┣",
        (Out, Left, ProlongStart, QuadrantInside) => "┣",
        (Out, Left, ProlongStart, QuadrantOutside) => "┣",
        (Out, Left, Start, Plain) => "┲",
        (Out, Left, Start, Rounded) => "┲",
        (Out, Left, Start, Double) => "┳",
        (Out, Left, Start, Thick) => "┳",
        (Out, Left, Start, QuadrantInside) => "┳",
        (Out, Left, Start, QuadrantOutside) => "┳",
        (Out, Left, Pos(_), Plain) => "┨",
        (Out, Left, Pos(_), Rounded) => "┨",
        (Out, Left, Pos(_), Double) => "┫",
        (Out, Left, Pos(_), Thick) => "┫",
        (Out, Left, Pos(_), QuadrantInside) => "┫",
        (Out, Left, Pos(_), QuadrantOutside) => "┫",
        (Out, Left, End, Plain) => "┺",
        (Out, Left, End, Rounded) => "┺",
        (Out, Left, End, Double) => "┻",
        (Out, Left, End, Thick) => "┻",
        (Out, Left, End, QuadrantInside) => "┻",
        (Out, Left, End, QuadrantOutside) => "┻",
        (Out, Left, ProlongEnd, Plain) => "┡",
        (Out, Left, ProlongEnd, Rounded) => "┡",
        (Out, Left, ProlongEnd, Double) => "┣",
        (Out, Left, ProlongEnd, Thick) => "┣",
        (Out, Left, ProlongEnd, QuadrantInside) => "┣",
        (Out, Left, ProlongEnd, QuadrantOutside) => "┣",
        (Out, Left, CrossEnd(_), _) => "X",

        // ----------------------------------------------
        (In, Top, CrossStart(_), _) => "X",
        (In, Top, ProlongStart, Plain) => "┏",
        (In, Top, ProlongStart, Rounded) => "┏",
        (In, Top, ProlongStart, Double) => "┏",
        (In, Top, ProlongStart, Thick) => "┏",
        (In, Top, ProlongStart, QuadrantInside) => "┏",
        (In, Top, ProlongStart, QuadrantOutside) => "┏",
        (In, Top, Start, Plain) => "┏",
        (In, Top, Start, Rounded) => "┏",
        (In, Top, Start, Double) => "┏",
        (In, Top, Start, Thick) => "┏",
        (In, Top, Start, QuadrantInside) => "┏",
        (In, Top, Start, QuadrantOutside) => "┏",
        (In, Top, Pos(_), Plain) => "┯",
        (In, Top, Pos(_), Rounded) => "┯",
        (In, Top, Pos(_), Double) => "┳",
        (In, Top, Pos(_), Thick) => "┳",
        (In, Top, Pos(_), QuadrantInside) => "┳",
        (In, Top, Pos(_), QuadrantOutside) => "┳",
        (In, Top, End, Plain) => "┓",
        (In, Top, End, Rounded) => "┓",
        (In, Top, End, Double) => "┓",
        (In, Top, End, Thick) => "┓",
        (In, Top, End, QuadrantInside) => "┓",
        (In, Top, End, QuadrantOutside) => "┓",
        (In, Top, ProlongEnd, Plain) => "┓",
        (In, Top, ProlongEnd, Rounded) => "┓",
        (In, Top, ProlongEnd, Double) => "┓",
        (In, Top, ProlongEnd, Thick) => "┓",
        (In, Top, ProlongEnd, QuadrantInside) => "┓",
        (In, Top, ProlongEnd, QuadrantOutside) => "┓",
        (In, Top, CrossEnd(_), _) => "X",

        (In, Right, CrossStart(_), _) => "X",
        (In, Right, ProlongStart, Plain) => "┓",
        (In, Right, ProlongStart, Rounded) => "┓",
        (In, Right, ProlongStart, Double) => "┓",
        (In, Right, ProlongStart, Thick) => "┓",
        (In, Right, ProlongStart, QuadrantInside) => "┓",
        (In, Right, ProlongStart, QuadrantOutside) => "┓",
        (In, Right, Start, Plain) => "┓",
        (In, Right, Start, Rounded) => "┓",
        (In, Right, Start, Double) => "┓",
        (In, Right, Start, Thick) => "┓",
        (In, Right, Start, QuadrantInside) => "┓",
        (In, Right, Start, QuadrantOutside) => "┓",
        (In, Right, Pos(_), Plain) => "┨",
        (In, Right, Pos(_), Rounded) => "┨",
        (In, Right, Pos(_), Double) => "┫",
        (In, Right, Pos(_), Thick) => "┫",
        (In, Right, Pos(_), QuadrantInside) => "┫",
        (In, Right, Pos(_), QuadrantOutside) => "┫",
        (In, Right, End, Plain) => "┛",
        (In, Right, End, Rounded) => "┛",
        (In, Right, End, Double) => "┛",
        (In, Right, End, Thick) => "┛",
        (In, Right, End, QuadrantInside) => "┛",
        (In, Right, End, QuadrantOutside) => "┛",
        (In, Right, ProlongEnd, Plain) => "┛",
        (In, Right, ProlongEnd, Rounded) => "┛",
        (In, Right, ProlongEnd, Double) => "┛",
        (In, Right, ProlongEnd, Thick) => "┛",
        (In, Right, ProlongEnd, QuadrantInside) => "┛",
        (In, Right, ProlongEnd, QuadrantOutside) => "┛",
        (In, Right, CrossEnd(_), _) => "X",

        (In, Bottom, CrossStart(_), _) => "X",
        (In, Bottom, ProlongStart, Plain) => "┗",
        (In, Bottom, ProlongStart, Rounded) => "┗",
        (In, Bottom, ProlongStart, Double) => "┗",
        (In, Bottom, ProlongStart, Thick) => "┗",
        (In, Bottom, ProlongStart, QuadrantInside) => "┗",
        (In, Bottom, ProlongStart, QuadrantOutside) => "┗",
        (In, Bottom, Start, Plain) => "┗",
        (In, Bottom, Start, Rounded) => "┗",
        (In, Bottom, Start, Double) => "┗",
        (In, Bottom, Start, Thick) => "┗",
        (In, Bottom, Start, QuadrantInside) => "┗",
        (In, Bottom, Start, QuadrantOutside) => "┗",
        (In, Bottom, Pos(_), Plain) => "┷",
        (In, Bottom, Pos(_), Rounded) => "┷",
        (In, Bottom, Pos(_), Double) => "┻",
        (In, Bottom, Pos(_), Thick) => "┻",
        (In, Bottom, Pos(_), QuadrantInside) => "┻",
        (In, Bottom, Pos(_), QuadrantOutside) => "┻",
        (In, Bottom, End, Plain) => "┛",
        (In, Bottom, End, Rounded) => "┛",
        (In, Bottom, End, Double) => "┛",
        (In, Bottom, End, Thick) => "┛",
        (In, Bottom, End, QuadrantInside) => "┛",
        (In, Bottom, End, QuadrantOutside) => "┛",
        (In, Bottom, ProlongEnd, Plain) => "┛",
        (In, Bottom, ProlongEnd, Rounded) => "┛",
        (In, Bottom, ProlongEnd, Double) => "┛",
        (In, Bottom, ProlongEnd, Thick) => "┛",
        (In, Bottom, ProlongEnd, QuadrantInside) => "┛",
        (In, Bottom, ProlongEnd, QuadrantOutside) => "┛",
        (In, Bottom, CrossEnd(_), _) => "X",

        (In, Left, CrossStart(_), _) => "X",
        (In, Left, ProlongStart, Plain) => "┏",
        (In, Left, ProlongStart, Rounded) => "┏",
        (In, Left, ProlongStart, Double) => "┏",
        (In, Left, ProlongStart, Thick) => "┏",
        (In, Left, ProlongStart, QuadrantInside) => "┏",
        (In, Left, ProlongStart, QuadrantOutside) => "┏",
        (In, Left, Start, Plain) => "┏",
        (In, Left, Start, Rounded) => "┏",
        (In, Left, Start, Double) => "┏",
        (In, Left, Start, Thick) => "┏",
        (In, Left, Start, QuadrantInside) => "┏",
        (In, Left, Start, QuadrantOutside) => "┏",
        (In, Left, Pos(_), Plain) => "┠",
        (In, Left, Pos(_), Rounded) => "┠",
        (In, Left, Pos(_), Double) => "┣",
        (In, Left, Pos(_), Thick) => "┣",
        (In, Left, Pos(_), QuadrantInside) => "┣",
        (In, Left, Pos(_), QuadrantOutside) => "┣",
        (In, Left, End, Plain) => "┗",
        (In, Left, End, Rounded) => "┗",
        (In, Left, End, Double) => "┗",
        (In, Left, End, Thick) => "┗",
        (In, Left, End, QuadrantInside) => "┗",
        (In, Left, End, QuadrantOutside) => "┗",
        (In, Left, ProlongEnd, Plain) => "┗",
        (In, Left, ProlongEnd, Rounded) => "┗",
        (In, Left, ProlongEnd, Double) => "┗",
        (In, Left, ProlongEnd, Thick) => "┗",
        (In, Left, ProlongEnd, QuadrantInside) => "┗",
        (In, Left, ProlongEnd, QuadrantOutside) => "┗",
        (In, Left, CrossEnd(_), _) => "X",

        // ----------------------------------------------
        (Through, Top, CrossStart(_), _) => "X",
        (Through, Top, ProlongStart, Plain) => "┏",
        (Through, Top, ProlongStart, Rounded) => "┏",
        (Through, Top, ProlongStart, Double) => "┏",
        (Through, Top, ProlongStart, Thick) => "┏",
        (Through, Top, ProlongStart, QuadrantInside) => "┏",
        (Through, Top, ProlongStart, QuadrantOutside) => "┏",
        (Through, Top, Start, Plain) => "┏",
        (Through, Top, Start, Rounded) => "┏",
        (Through, Top, Start, Double) => "┏",
        (Through, Top, Start, Thick) => "┏",
        (Through, Top, Start, QuadrantInside) => "┏",
        (Through, Top, Start, QuadrantOutside) => "┏",
        (Through, Top, Pos(_), Plain) => "┿",
        (Through, Top, Pos(_), Rounded) => "┿",
        (Through, Top, Pos(_), Double) => "╋",
        (Through, Top, Pos(_), Thick) => "╋",
        (Through, Top, Pos(_), QuadrantInside) => "╋",
        (Through, Top, Pos(_), QuadrantOutside) => "╋",
        (Through, Top, End, Plain) => "┓",
        (Through, Top, End, Rounded) => "┓",
        (Through, Top, End, Double) => "┓",
        (Through, Top, End, Thick) => "┓",
        (Through, Top, End, QuadrantInside) => "┓",
        (Through, Top, End, QuadrantOutside) => "┓",
        (Through, Top, ProlongEnd, Plain) => "┓",
        (Through, Top, ProlongEnd, Rounded) => "┓",
        (Through, Top, ProlongEnd, Double) => "┓",
        (Through, Top, ProlongEnd, Thick) => "┓",
        (Through, Top, ProlongEnd, QuadrantInside) => "┓",
        (Through, Top, ProlongEnd, QuadrantOutside) => "┓",
        (Through, Top, CrossEnd(_), _) => "X",

        (Through, Right, CrossStart(_), _) => "X",
        (Through, Right, ProlongStart, Plain) => "┓",
        (Through, Right, ProlongStart, Rounded) => "┓",
        (Through, Right, ProlongStart, Double) => "┓",
        (Through, Right, ProlongStart, Thick) => "┓",
        (Through, Right, ProlongStart, QuadrantInside) => "┓",
        (Through, Right, ProlongStart, QuadrantOutside) => "┓",
        (Through, Right, Start, Plain) => "┓",
        (Through, Right, Start, Rounded) => "┓",
        (Through, Right, Start, Double) => "┓",
        (Through, Right, Start, Thick) => "┓",
        (Through, Right, Start, QuadrantInside) => "┓",
        (Through, Right, Start, QuadrantOutside) => "┓",
        (Through, Right, Pos(_), Plain) => "╂",
        (Through, Right, Pos(_), Rounded) => "╂",
        (Through, Right, Pos(_), Double) => "╋",
        (Through, Right, Pos(_), Thick) => "╋",
        (Through, Right, Pos(_), QuadrantInside) => "╋",
        (Through, Right, Pos(_), QuadrantOutside) => "╋",
        (Through, Right, End, Plain) => "┛",
        (Through, Right, End, Rounded) => "┛",
        (Through, Right, End, Double) => "┛",
        (Through, Right, End, Thick) => "┛",
        (Through, Right, End, QuadrantInside) => "┛",
        (Through, Right, End, QuadrantOutside) => "┛",
        (Through, Right, ProlongEnd, Plain) => "┛",
        (Through, Right, ProlongEnd, Rounded) => "┛",
        (Through, Right, ProlongEnd, Double) => "┛",
        (Through, Right, ProlongEnd, Thick) => "┛",
        (Through, Right, ProlongEnd, QuadrantInside) => "┛",
        (Through, Right, ProlongEnd, QuadrantOutside) => "┛",
        (Through, Right, CrossEnd(_), _) => "X",

        (Through, Bottom, CrossStart(_), _) => "X",
        (Through, Bottom, ProlongStart, Plain) => "┗",
        (Through, Bottom, ProlongStart, Rounded) => "┗",
        (Through, Bottom, ProlongStart, Double) => "┗",
        (Through, Bottom, ProlongStart, Thick) => "┗",
        (Through, Bottom, ProlongStart, QuadrantInside) => "┗",
        (Through, Bottom, ProlongStart, QuadrantOutside) => "┗",
        (Through, Bottom, Start, Plain) => "┗",
        (Through, Bottom, Start, Rounded) => "┗",
        (Through, Bottom, Start, Double) => "┗",
        (Through, Bottom, Start, Thick) => "┗",
        (Through, Bottom, Start, QuadrantInside) => "┗",
        (Through, Bottom, Start, QuadrantOutside) => "┗",
        (Through, Bottom, Pos(_), Plain) => "┿",
        (Through, Bottom, Pos(_), Rounded) => "┿",
        (Through, Bottom, Pos(_), Double) => "╋",
        (Through, Bottom, Pos(_), Thick) => "╋",
        (Through, Bottom, Pos(_), QuadrantInside) => "╋",
        (Through, Bottom, Pos(_), QuadrantOutside) => "╋",
        (Through, Bottom, End, Plain) => "┛",
        (Through, Bottom, End, Rounded) => "┛",
        (Through, Bottom, End, Double) => "┛",
        (Through, Bottom, End, Thick) => "┛",
        (Through, Bottom, End, QuadrantInside) => "┛",
        (Through, Bottom, End, QuadrantOutside) => "┛",
        (Through, Bottom, ProlongEnd, Plain) => "┛",
        (Through, Bottom, ProlongEnd, Rounded) => "┛",
        (Through, Bottom, ProlongEnd, Double) => "┛",
        (Through, Bottom, ProlongEnd, Thick) => "┛",
        (Through, Bottom, ProlongEnd, QuadrantInside) => "┛",
        (Through, Bottom, ProlongEnd, QuadrantOutside) => "┛",
        (Through, Bottom, CrossEnd(_), _) => "X",

        (Through, Left, CrossStart(_), _) => "X",
        (Through, Left, ProlongStart, Plain) => "┏",
        (Through, Left, ProlongStart, Rounded) => "┏",
        (Through, Left, ProlongStart, Double) => "┏",
        (Through, Left, ProlongStart, Thick) => "┏",
        (Through, Left, ProlongStart, QuadrantInside) => "┏",
        (Through, Left, ProlongStart, QuadrantOutside) => "┏",
        (Through, Left, Start, Plain) => "┏",
        (Through, Left, Start, Rounded) => "┏",
        (Through, Left, Start, Double) => "┏",
        (Through, Left, Start, Thick) => "┏",
        (Through, Left, Start, QuadrantInside) => "┏",
        (Through, Left, Start, QuadrantOutside) => "┏",
        (Through, Left, Pos(_), Plain) => "╂",
        (Through, Left, Pos(_), Rounded) => "╂",
        (Through, Left, Pos(_), Double) => "╋",
        (Through, Left, Pos(_), Thick) => "╋",
        (Through, Left, Pos(_), QuadrantInside) => "╋",
        (Through, Left, Pos(_), QuadrantOutside) => "╋",
        (Through, Left, End, Plain) => "┗",
        (Through, Left, End, Rounded) => "┗",
        (Through, Left, End, Double) => "┗",
        (Through, Left, End, Thick) => "┗",
        (Through, Left, End, QuadrantInside) => "┗",
        (Through, Left, End, QuadrantOutside) => "┗",
        (Through, Left, ProlongEnd, Plain) => "┗",
        (Through, Left, ProlongEnd, Rounded) => "┗",
        (Through, Left, ProlongEnd, Double) => "┗",
        (Through, Left, ProlongEnd, Thick) => "┗",
        (Through, Left, ProlongEnd, QuadrantInside) => "┗",
        (Through, Left, ProlongEnd, QuadrantOutside) => "┗",
        (Through, Left, CrossEnd(_), _) => "X",

        (Manual(cc), _, _, _) => cc,
    }
}

fn quad_inside_joint(joint: Joint) -> &'static str {
    use BorderType::*;
    use JointMark::*;
    use JointPos::*;
    use JointSide::*;

    match (
        joint.mark,
        joint.side,
        joint.pos,
        joint.mirrored,
        joint.other_border,
    ) {
        (Out, Top, CrossStart(_), _, _) => "▚",
        (Out, Top, ProlongStart, false, _) => "▚",
        (Out, Top, ProlongStart, true, _) => "▄",
        (Out, Top, Start, false, _) => "▐",
        (Out, Top, Start, true, _) => "▐",
        (Out, Top, Pos(_), false, QuadrantInside) => "▟",
        (Out, Top, Pos(_), true, QuadrantInside) => "▙",
        (Out, Top, Pos(_), false, _) => "▙",
        (Out, Top, Pos(_), true, _) => "▟",
        (Out, Top, End, false, _) => "▌",
        (Out, Top, End, true, _) => "▌",
        (Out, Top, ProlongEnd, false, _) => "▄",
        (Out, Top, ProlongEnd, true, _) => "▞",
        (Out, Top, CrossEnd(_), _, _) => "▞",

        (Out, Right, CrossStart(_), _, _) => "▞",
        (Out, Right, ProlongStart, false, _) => "▞",
        (Out, Right, ProlongStart, true, _) => "▌",
        (Out, Right, Start, false, _) => "▄",
        (Out, Right, Start, true, _) => "▄",
        (Out, Right, Pos(_), false, QuadrantInside) => "▙",
        (Out, Right, Pos(_), true, QuadrantInside) => "▛",
        (Out, Right, Pos(_), false, _) => "▛",
        (Out, Right, Pos(_), true, _) => "▙",
        (Out, Right, End, false, _) => "▀",
        (Out, Right, End, true, _) => "▀",
        (Out, Right, ProlongEnd, false, _) => "▌",
        (Out, Right, ProlongEnd, true, _) => "▚",
        (Out, Right, CrossEnd(_), _, _) => "▚",

        (Out, Bottom, CrossStart(_), _, _) => "▞",
        (Out, Bottom, ProlongStart, false, _) => "▞",
        (Out, Bottom, ProlongStart, true, _) => "▀",
        (Out, Bottom, Start, false, _) => "▐",
        (Out, Bottom, Start, true, _) => "▐",
        (Out, Bottom, Pos(_), false, QuadrantInside) => "▜",
        (Out, Bottom, Pos(_), true, QuadrantInside) => "▛",
        (Out, Bottom, Pos(_), false, _) => "▛",
        (Out, Bottom, Pos(_), true, _) => "▜",
        (Out, Bottom, End, false, _) => "▌",
        (Out, Bottom, End, true, _) => "▌",
        (Out, Bottom, ProlongEnd, false, _) => "▀",
        (Out, Bottom, ProlongEnd, true, _) => "▚",
        (Out, Bottom, CrossEnd(_), _, _) => "▚",

        (Out, Left, CrossStart(_), _, _) => "▚",
        (Out, Left, ProlongStart, false, _) => "▚",
        (Out, Left, ProlongStart, true, _) => "▐",
        (Out, Left, Start, false, _) => "▄",
        (Out, Left, Start, true, _) => "▄",
        (Out, Left, Pos(_), false, QuadrantInside) => "▟",
        (Out, Left, Pos(_), true, QuadrantInside) => "▜",
        (Out, Left, Pos(_), false, _) => "▜",
        (Out, Left, Pos(_), true, _) => "▟",
        (Out, Left, End, false, _) => "▀",
        (Out, Left, End, true, _) => "▀",
        (Out, Left, ProlongEnd, false, _) => "▐",
        (Out, Left, ProlongEnd, true, _) => "▞",
        (Out, Left, CrossEnd(_), _, _) => "▞",

        // ----------------------------------------------
        (In, Top, CrossStart(_), _, _) => "X",
        (In, Top, ProlongStart, _, _) => "┌",
        (In, Top, Start, _, _) => "┌",
        (In, Top, Pos(_), _, _) => "┬",
        (In, Top, End, _, _) => "┐",
        (In, Top, ProlongEnd, _, _) => "┐",
        (In, Top, CrossEnd(_), _, _) => "X",

        (In, Right, CrossStart(_), _, _) => "X",
        (In, Right, ProlongStart, _, _) => "┐",
        (In, Right, Start, _, _) => "┐",
        (In, Right, Pos(_), _, _) => "┤",
        (In, Right, End, _, _) => "┘",
        (In, Right, ProlongEnd, _, _) => "┘",
        (In, Right, CrossEnd(_), _, _) => "X",

        (In, Bottom, CrossStart(_), _, _) => "X",
        (In, Bottom, ProlongStart, _, _) => "└",
        (In, Bottom, Start, _, _) => "└",
        (In, Bottom, Pos(_), _, _) => "┴",
        (In, Bottom, End, _, _) => "┘",
        (In, Bottom, ProlongEnd, _, _) => "┘",
        (In, Bottom, CrossEnd(_), _, _) => "X",

        (In, Left, CrossStart(_), _, _) => "X",
        (In, Left, ProlongStart, _, _) => "┌",
        (In, Left, Start, _, _) => "┌",
        (In, Left, Pos(_), _, _) => "├",
        (In, Left, End, _, _) => "└",
        (In, Left, ProlongEnd, _, _) => "└",
        (In, Left, CrossEnd(_), _, _) => "X",

        // ----------------------------------------------
        (Through, Top, CrossStart(_), _, _) => "X",
        (Through, Top, ProlongStart, _, _) => "┌",
        (Through, Top, Start, _, _) => "┌",
        (Through, Top, Pos(_), _, _) => "┼",
        (Through, Top, End, _, _) => "┐",
        (Through, Top, ProlongEnd, _, _) => "┐",
        (Through, Top, CrossEnd(_), _, _) => "X",

        (Through, Right, CrossStart(_), _, _) => "X",
        (Through, Right, ProlongStart, _, _) => "┐",
        (Through, Right, Start, _, _) => "┐",
        (Through, Right, Pos(_), _, _) => "┼",
        (Through, Right, End, _, _) => "┘",
        (Through, Right, ProlongEnd, _, _) => "┘",
        (Through, Right, CrossEnd(_), _, _) => "X",

        (Through, Bottom, CrossStart(_), _, _) => "X",
        (Through, Bottom, ProlongStart, _, _) => "└",
        (Through, Bottom, Start, _, _) => "└",
        (Through, Bottom, Pos(_), _, _) => "┼",
        (Through, Bottom, End, _, _) => "┘",
        (Through, Bottom, ProlongEnd, _, _) => "┘",
        (Through, Bottom, CrossEnd(_), _, _) => "X",

        (Through, Left, CrossStart(_), _, _) => "X",
        (Through, Left, ProlongStart, _, _) => "┌",
        (Through, Left, Start, _, _) => "┌",
        (Through, Left, Pos(_), _, _) => "┼",
        (Through, Left, End, _, _) => "└",
        (Through, Left, ProlongEnd, _, _) => "└",
        (Through, Left, CrossEnd(_), _, _) => "X",

        (Manual(cc), _, _, _, _) => cc,
    }
}
